{"version":3,"sources":["app/aggregate.js","app/data.js","app/lib/geocode.js","app/lib/localstorage_memoize.js","app/lib/save_to_file.js","app/lib/unique_counter.js","app/main.js","app/projections.js","app/render.js"],"names":[],"mappingsjiBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArnDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArVA;AAAA","file":"public/app.js","sourcesContent":["var localStorageMemoize = require(\"lib/localstorage_memoize\");\nvar geocode = require(\"lib/geocode\");\n\nvar cachedGeocode = localStorageMemoize.promise(\"geocoder\", geocode);\nvar cachedReverseGeocode = localStorageMemoize.promise(\"reverseGeocoder\", geocode.reverse);\n\nif (window.location.href.indexOf(\"localhost\") === -1) {\n  cachedGeocode.cacheOnly();\n  cachedReverseGeocode.cacheOnly();\n}\n\nmodule.exports = function(rawData) {\n  var data = [];\n\n  var slim2Promise = $.getJSON(\"slim-2.json\");\n\n  var allNames = _.keys(rawData);\n\n  return $.when(\n    $.getJSON(\"geocode_cache.json\"),\n    $.getJSON(\"reverse_geocode_cache.json\")\n  )\n  .then(function(geocodeCacheData, reverseGeocodeCacheData) {\n    cachedGeocode.load(geocodeCacheData[0]);\n    cachedReverseGeocode.load(reverseGeocodeCacheData[0]);\n\n    _.forOwn(rawData, function(placesForPerson, name) {\n      _.each(_.flatten(placesForPerson), function(placeRaw) {\n        data.push({\n          name: name,\n          placeRaw: placeRaw,\n          promise: cachedGeocode(placeRaw)\n        });\n      });\n    });\n\n    return $.when.apply($.when, _.pluck(data, 'promise'));\n  })\n  .then(function() {\n      // Geocode all the places\n      var geocodeResults = Array.prototype.slice.apply(arguments);\n      _(geocodeResults).each(function(result, index) {\n        _.extend(data[index], {\n          lat: result.lat,\n          lon: result.lon,\n          reversePromise: cachedReverseGeocode(result)\n        });\n      });\n\n      return $.when.apply($.when, _.pluck(data, 'reversePromise'));\n    })\n    .then(function() {\n      // Reverse geocode all the places based on the long/lat we get back from\n      // the geocoder.\n      var reverseResults = Array.prototype.slice.apply(arguments);\n\n      _.each(reverseResults, function(result, index) {\n        _.extend(data[index], {\n          country: result.address.country,\n          countryCode: result.address.country_code\n        });\n      });\n    })\n    .then(function() {\n      return slim2Promise;\n    })\n    .then(function(slim2) {\n      // alpha2Toid is a map from ISO-3166 alpha-2 code to ISO-3166 numeric id\n      //\n      // https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes\n      var alpha2ToId = _.reduce(slim2, function(result, d) {\n        result[d['alpha-2'].toLowerCase()] = parseInt(d['country-code'], 10);\n        return result;\n      }, {});\n\n      // Places is a unique list of all places. Each city should appear exactly\n      // once in this list.\n      var places = _.values(_.reduce(data, function(result, d) {\n        // We deduplicate places based on their lat,lon. This allows \"Ottawa\",\n        // \"Ottawa, Canada\", and \"Ottawa, Ontario, Canada\", to all end up being\n        // part of the same data point.\n        var key = d.lat + \",\" + d.lon;\n        var place;\n        if (!(place = result[key])) {\n          place = result[key] = _.extend({\n            count: 0,\n            names: [],\n            countByName: {}\n          }, d);\n        }\n        place.count++;\n        place.names = _.uniq([d.name].concat(place.names));\n        if (!place.countByName[d.name]) {\n          place.countByName[d.name] = 0;\n        }\n        place.countByName[d.name]++;\n        return result;\n      }, {}));\n\n      // List of all places, with each place occuring once per person in the\n      // list.\n      var placesPerPerson = _.reduce(places, function(result, place) {\n        return result.concat(_.map(place.names, function(name, index) {\n          return {\n            name: name,\n            nameIndex: index,\n            names: place.names,\n            lat: place.lat,\n            lon: place.lon,\n            countryCode: place.countryCode,\n            country: place.country,\n            // TODO(jlfwong): Rename count to something more helpful, then just\n            // use extend\n            count: place.countByName[name],\n            totalCount: place.count,\n            placeRaw: place.placeRaw\n          };\n        }));\n      }, []);\n\n      // List of all the places a person has been in order\n      var placesByPerson = _.groupBy(data, 'name');\n\n      // List of pairs of trips taken from place 1 to place 2\n      var pairsByPerson = _.reduce(placesByPerson, function(result, places, name) {\n        result[name] = _(places)\n          .zip([null].concat(places))\n          .filter(function(x) { return x[0] && x[1]; })\n          .value();\n\n        return result;\n      }, {});\n\n      var countriesById = _.reduce(placesPerPerson, function(result, place) {\n        var key = alpha2ToId[place.countryCode];\n        var country;\n        if (!(country = result[key])) {\n          country = result[key] = {\n            count: 0,\n            name: place.country\n          };\n        }\n        // One point per person per city in the country\n        country.count++;\n        return result;\n      }, {});\n\n      var visitedByAtLeastN = _.map(_.range(1, allNames.length + 1), function(n) {\n        var ps = _.filter(places, function(place) {\n          return place.names.length >= n;\n        });\n\n        var cs = _.unique(_.pluck(ps, 'country'));\n\n        return {\n          n: n,\n          placeCount: ps.length,\n          countryCount: cs.length\n        };\n      });\n\n      var placesVisitedByAll = _.filter(places, function(place) {\n        return place.names.length === allNames.length;\n      });\n\n      return {\n        visitedByAtLeastN: visitedByAtLeastN,\n        placesPerPerson: placesPerPerson,\n        pairsByPerson: pairsByPerson,\n        countriesById: countriesById\n      };\n    });\n};\n\nmodule.exports.logCaches = function() {\n  console.log({\n    'cachedGeocode': cachedGeocode.dump(),\n    'cachedReverseGeocode': cachedReverseGeocode.dump()\n  });\n};\n\n// Invoke in browser with: require(\"aggregate\").saveCaches()\nmodule.exports.saveCaches = function() {\n  var saveToFile = require(\"lib/save_to_file\");\n  saveToFile(cachedGeocode.dump(), 'geocode_cache.json');\n  saveToFile(cachedReverseGeocode.dump(), 'reverse_geocode_cache.json');\n};\n\n// Invoke in browser with: require(\"aggregate\").clearCaches()\nmodule.exports.clearCaches = function() {\n  cachedGeocode.clear();\n  cachedReverseGeocode.clear();\n};\n","var FAMILY_2007 = [\n  //Jun 2007\n  \"Rishikesh, India\",\n  \"Delhi, India\",\n]\n\nvar FAMILY_IMMIGRATION = [\n  \"Delhi, India\",\n  \"New York, NY\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2010 = [\n  //Dec 2009\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Apr 2010\n  \"Washington, DC\",\n  \"Savannah, GA\",\n  //May\n  \"Atlanta, GA\",\n  \"Memphis, TN\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Jul\n  \"New York, NY\",\n  \"Scranton, PA\",\n  \"Buffalo, NY\",\n  \"Bluefield, WV\",\n  \"Savannah, GA\",\n  //Dec\n  \"Orlando, FL\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2011 = [\n  //Mar\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  \"West Palm Beach, FL\",\n  \"Miami, FL\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2011_ = [\n  //Jul\n  \"Atlanta, GA\",\n  \"Sacramento, CA\",\n  \"San Francisco, CA\",\n  \"Sacramento, CA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Nov\n  \"Myrtle Beach, SC\",\n  \"Savannah, GA\",\n  \"Boston, MA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2011_INDIA = [\n  //Dec\n  \"Washington, DC\",\n  \"Paris, France\",\n  \"New Delhi, India\",\n  \"Aurangabad, India\",\n  \"Shirdi, India\",\n  \"Aurangabad, India\",\n  \"New Delhi, India\",\n  \"Jammu, India\",\n  \"New Delhi, India\",\n  \"Paris, France\",\n  \"Washington, DC\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2012 = [\n  //May\n  \"Mobile, AL\",\n  \"New Orleans, LA\",\n  \"Mobile, AL\",\n  \"Savannah, GA\",\n  //Jun 2012\n  \"St. Augustine, FL\",\n  \"Savannah, GA\",\n  \"Washington, DC\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2012M = [\n  //Jul\n  \"Raleigh, NC\",\n  \"Washington, DC\",\n  \"Savannah, GA\",\n  \"Jacksonville, FL\",\n  \"Savannah, GA\",\n  //Aug\n  \"Knoxville, KY\",\n  \"Chicago, IL\",\n  \"Knoxville, KY\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2012_ = [\n  //Nov\n  \"Washington, DC\",\n  \"San Francisco\",\n  \"Washington, DC\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2013_BEE = [\n  //Feb 2013\n  \"Manning, SC\",\n  \"Kingstree, SC\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2013 = [\n  //May\n  \"Richmond, VA\",\n  \"New York, NY\", //any stops on the way?\n  \"New Haven, CT\",\n  \"Richmond, VA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2013_ = [\n  //Jul\n  \"Jacksonville, FL\",\n  \"St. Augustine, FL\",\n  \"Savannah, GA\",\n  //Sep\n  \"Myrtle Beach, SC\",\n  \"Savannah, GA\",\n  //Oct\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Nov\n  \"Richmond, VA\",\n  \"Washington, DC\",\n  \"Baltimore, MD\",\n  \"Richmond, VA\",\n  \"Savannah, GA\",\n  //Jan 2014\n  \"Kingstree, SC\",\n  \"Manning, SC\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2014 = [\n  //Jan\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Feb\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Apr\n  \"Washington, DC\",\n  \"Savannah, GA\",\n  \"Charlotte, NC\",\n  \"Paris, France\",\n  \"Charlotte, NC\",\n  \"Savannah, GA\",\n  //May\n  \"Atlanta, GA\",\n  \"Indianapolis, IN\",\n  \"Knoxville, KY\",\n  \"Savannah, GA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Jun\n  \"Charleston, SC\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2014_1 = [\n  \"Detroit, MI\",\n  \"London, UK\",\n  \"Nottingham, UK\",\n  \"Newark, UK\",\n  \"Nottingham, UK\",\n  \"Derbyshire, UK\",\n  \"Nottingham, UK\",\n  \"London, UK\",\n  \"Detroit, MI\",\n  \"Savannah, GA\",\n  //Jul\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2014_ = [\n  //Oct\n  \"Miami, FL\",\n  \"Savannah, GA\",\n  //Nov\n  \"Tampa, FL\",\n  \"Key West, FL\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2015 = [\n  //Jan\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2015_ = [\n  //Feb\n  \"Manning, SC\",\n  \"Kingstree, SC\",\n  \"Savannah, GA\",\n  //Mar\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2015__ = [\n  //May\n  \"Hopewell, VA\",\n  \"Philadelphia, PA\",\n  \"Washington, DC\",\n  \"Chantilly, VA\",\n  \"Raleigh, NC\",\n  \"Savannah, GA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Jun\n  \"Atlanta, GA\",\n  \"Paris, France\",\n  \"Brussels, Belgium\",\n  \"Paris, France\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2016 = [\n  //Nov\n  \"Seattle, WA\",\n  \"Savannah, GA\",\n  //Jan 2016\n  \"Augusta, GA\",\n  \"Savannah, GA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Feb\n  \"Manning, SC\",\n  \"Kingstree, SC\",\n  \"Savannah, GA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n  //Mar\n  \"Woodbridge, VA\",\n  \"Boston, MA\",\n  \"Woodbridge, VA\",\n  \"Savannah, GA\",\n  //Jun\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2016_ = [\n  //Jul\n  \"Raleigh, NC\",\n];\n\nvar FAMILY_2016__ = [\n  \"Hillsborough, NC\",\n  \"Raleigh, NC\",\n  \"Charlotte, NC\",\n  \"Asheville, NC\",\n  \"Savannah, GA\",\n  //Aug\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2016___ = [\n  //Sep\n  \"St. Augustine, FL\",\n  \"Jacksonville, FL\",\n  \"Savannah, GA\",\n];\n\nvar FAMILY_2016____ = [\n  //Oct\n  \"Macon, GA\",\n  \"Atlanta, GA\",\n  \"Savannah, GA\",\n];\n\nmodule.exports = {\n  \"Aryaman\": [\n    \"Delhi, India\",\n    FAMILY_2007,\n    FAMILY_IMMIGRATION,\n    FAMILY_2010,\n    FAMILY_2011,\n    FAMILY_2011_,\n    FAMILY_2011_INDIA,\n    FAMILY_2012,\n    FAMILY_2012M,\n    FAMILY_2012_,\n    \"Atlanta, GA\",\n    \"Athens, GA\",\n    \"Savannah, GA\",\n    FAMILY_2013_BEE,\n    \"Charleston, SC\",\n    \"Savannah, GA\",\n    FAMILY_2013,\n    FAMILY_2013_,\n    FAMILY_2014,\n    FAMILY_2014_1,\n    \"Atlanta, GA\",\n    \"Baltimore, MD\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2014_,\n    FAMILY_2015,\n    FAMILY_2015_,\n    \"Folkston, GA\",\n    \"Savannah, GA\",\n    FAMILY_2015__,\n    FAMILY_2016,\n    FAMILY_2016_,\n    FAMILY_2016__,\n    FAMILY_2016___,\n    \"Charleston, SC\",\n    \"Savannah, GA\",\n    FAMILY_2016____,\n  ],\n  \"Amay\": [\n    \"Delhi, India\",\n    FAMILY_2007,\n    FAMILY_IMMIGRATION,\n    FAMILY_2010,\n    FAMILY_2011,\n    FAMILY_2011_,\n    FAMILY_2011_INDIA,\n    FAMILY_2012,\n    FAMILY_2012M,\n    FAMILY_2012_,\n    \"Atlanta, GA\",\n    \"Athens, GA\",\n    \"Savannah, GA\",\n    FAMILY_2013_BEE,\n    \"Charleston, SC\",\n    \"Savannah, GA\",\n    FAMILY_2013,\n    FAMILY_2013_,\n    FAMILY_2014,\n    FAMILY_2014_1,\n    FAMILY_2014_,\n    FAMILY_2015,\n    FAMILY_2015_,\n    FAMILY_2015__,\n    FAMILY_2016,\n    \"Greensboro, NC\",\n    \"Raleigh, NC\",\n    FAMILY_2016_,\n    FAMILY_2016__,\n    FAMILY_2016___,\n    \"Charleston, SC\",\n    \"Savannah, GA\",\n    FAMILY_2016____,\n  ],\n  \"Anshu\": [\n    \"Delhi, India\",\n    FAMILY_2007,\n    \"New York, NY\",\n    \"Phoenix, AZ\",\n    \"Grand Canyon National Park, AZ\",\n    \"Phoenix, AZ\",\n    \"San Francisco, CA\",\n    \"Phoenix, AZ\",\n    \"Cincinnati, OH\",\n    \"Lexington, KY\",\n    \"Chicago, IL\",\n    \"Delhi, India\",\n    \"Frankfurt, Germany\",\n    \"Chicago, IL\",\n    \"Savannah, GA\",\n    \"Chicago, IL\",\n    \"Frankfurt, Germany\",\n    \"Delhi, India\",\n    FAMILY_IMMIGRATION,\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2010,\n    FAMILY_2011,\n    FAMILY_2011_,\n    FAMILY_2011_INDIA,\n    FAMILY_2012,\n    \"Brussels, Belgium\",\n    \"Delhi, India\",\n    \"Agra, India\",\n    \"Jaipur, India\",\n    \"Goa, India\",\n    \"Delhi, India\",\n    \"Brussels, Belgium\",\n    \"Savannah, GA\",\n    FAMILY_2012M,\n    \"Charlotte, NC\", //Dec\n    \"Richmond, VA\",\n    \"Charlotte, NC\",\n    \"Savannah, GA\", //Jan\n    \"Atlanta, GA\",\n    \"Philadelphia, PA\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2012_,\n    \"Atlanta, GA\",\n    \"Athens, GA\",\n    \"Savannah, GA\",\n    FAMILY_2013_BEE,\n    \"Charleston, SC\", //Feb\n    \"Savannah, GA\",\n    \"St. Paul, MN\",\n    \"Chicago, IL\",\n    \"St. Paul, MN\",\n    \"Savannah, GA\",\n    \"Atlanta, GA\",\n    \"Philadelphia, PA\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    \"Richmond, VA\",\n    \"Philadelphia, PA\",\n    \"Richmond, VA\",\n    \"Savannah, GA\",\n    \"Dallas, TX\",\n    \"San Francisco, CA\",\n    \"Chico, CA\",\n    \"San Francisco, CA\",\n    \"Dallas, TX\",\n    \"Savannah, GA\",\n    FAMILY_2013,\n    \"Charlotte, NC\",\n    \"New York, NY\",\n    \"Charlotte, NC\",\n    \"Savannah, GA\",\n    FAMILY_2013_,\n    \"Atlanta, GA\",\n    \"Los Angeles, CA\",\n    \"Sydney, Australia\",\n    \"Brisbane, Australia\",\n    \"Sydney, Australia\",\n    \"Los Angeles, CA\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2014,\n    FAMILY_2014_1,\n    \"Atlanta, GA\",\n    \"Baltimore, MD\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2014_,\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2015,\n    \"San Antonio, TX\",\n    \"Savannah, GA\",\n    FAMILY_2015_,\n    \"Atlanta, GA\",\n    \"Chicago, IL\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2015__,\n    FAMILY_2016,\n    \"Greensboro, NC\",\n    \"Raleigh, NC\",\n    FAMILY_2016_,\n    \"Atlanta, GA\",\n    \"New Orleans, LA\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2016__,\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2016___,\n    FAMILY_2016____,\n  ],\n  \"Amit\": [\n    \"Delhi, India\",\n    FAMILY_2007,\n    \"Mumbai, India\",\n    FAMILY_IMMIGRATION,\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2010,\n    FAMILY_2011,\n    \"Atlanta, GA\",\n    \"Phoenix, AZ\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2011_,\n    \"Washington, DC\",\n    \"Dubai, UAE\",\n    \"New Delhi, India\",\n    \"Aurangabad, India\",\n    \"Shirdi, India\",\n    \"Aurangabad, India\",\n    \"New Delhi, India\",\n    \"Jammu, India\",\n    \"New Delhi, India\",\n    \"Dubai, UAE\",\n    \"Washington, DC\",\n    \"Savannah, GA\",\n    FAMILY_2012,\n    FAMILY_2012M,\n    FAMILY_2012_,\n    \"Atlanta, GA\",\n    \"Athens, GA\",\n    \"Savannah, GA\",\n    FAMILY_2013_BEE,\n    \"Charleston, SC\",\n    \"Savannah, GA\",\n    \"Atlanta, GA\",\n    \"Philadelphia, PA\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    \"Richmond, VA\",\n    \"Philadelphia, PA\",\n    \"Richmond, VA\",\n    \"Savannah, GA\",\n    FAMILY_2013,\n    FAMILY_2013_,\n    FAMILY_2014,\n    \"Atlanta, GA\",\n    \"Memphis, TN\",\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2014_1,\n    \"New York, NY\",\n    \"Delhi, India\",\n    \"New York, NY\",\n    \"Savannah, GA\",\n    FAMILY_2014_,\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2015,\n    FAMILY_2015_,\n    FAMILY_2015__,\n    FAMILY_2016,\n    \"Greensboro, NC\",\n    \"Raleigh, NC\",\n    FAMILY_2016_,\n    FAMILY_2016__,\n    \"Atlanta, GA\",\n    \"Savannah, GA\",\n    FAMILY_2016___,\n    FAMILY_2016____,\n    \"Atlanta, GA\",\n    \"Austin, TX\",\n    \"Atlanta, GA\"\n  ],\n};\n","var geocode = module.exports = function (q) {\n  return $.ajax(\"http://nominatim.openstreetmap.org/search/\", {\n    data: {\n      q: q,\n      format: \"json\"\n    }\n  }).then(function(data) {\n    if (!data || !data[0]) {\n      throw new Error(\"Geocoding '\" + q + \"' failed.\");\n    }\n    return {\n      lat: parseFloat(data[0].lat, 10),\n      lon: parseFloat(data[0].lon, 10)\n    };\n  });\n};\n\ngeocode.reverse = function(args) {\n  return $.ajax(\"http://nominatim.openstreetmap.org/reverse\", {\n    data: {\n      lat: args.lat,\n      lon: args.lon,\n      zoom: 8,\n      format: \"json\",\n      addressdetails: 1\n    }\n  }).then(function(data) {\n    if (!data) {\n      throw new Error(\"Reverse Geocoding '\" + args + \"' failed.\");\n    }\n    return {\n      display_name: data.display_name,\n      address: data.address\n    };\n  });\n};\n","var localStorageMemoize = function(cacheKeyPrefix, fn) {\n  var localStorageKey = \"lsMemoV1_\" + cacheKeyPrefix;\n  var cache;\n\n  if (!(cache = JSON.parse(localStorage.getItem(localStorageKey)))) {\n    cache = {};\n  }\n\n  var memoed = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var argKey = JSON.stringify(args);\n    if (!(cache[argKey])) {\n      cache[argKey] = fn.apply(this, args);\n      localStorage.setItem(localStorageKey, JSON.stringify(cache));\n    }\n    return cache[argKey];\n  };\n\n  memoed.clear = function() {\n    cache = {};\n    localStorage.setItem(localStorageKey, JSON.stringify(cache));\n  };\n\n  return memoed;\n};\n\n// TODO(jlfwong): Generalize for any number of resolve args?\nlocalStorageMemoize.promise = function(cacheKeyPrefix, fn) {\n  var localStorageKey = \"pMemoV1_\" + cacheKeyPrefix;\n  var cache;\n  var cacheOnly = false;\n\n  if (!(cache = JSON.parse(localStorage.getItem(localStorageKey)))) {\n    cache = {};\n  }\n\n  var memoed = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var argKey = JSON.stringify(args);\n    var deferred = $.Deferred();\n    var cachedVal = cache[argKey];\n    if (cachedVal) {\n      deferred.resolveWith(null, cachedVal);\n    } else {\n      if (cacheOnly) {\n        throw new Error(\n            \"Cache only mode enabled. Cache miss on '\" + argKey + \"'.\");\n      }\n      fn.apply(this, args).then(function() {\n        var args = Array.prototype.slice.apply(arguments);\n        cache[argKey] = args;\n        memoed.save();\n        deferred.resolveWith(null, args);\n      });\n    }\n    return deferred.promise();\n  };\n\n  memoed.save = function() {\n    localStorage.setItem(localStorageKey, JSON.stringify(cache));\n  };\n\n  memoed.clear = function() {\n    cache = {};\n    memoed.save();\n  };\n\n  memoed.dump = function() {\n    return cache;\n  };\n\n  memoed.load = function(savedCache) {\n    _.extend(cache, savedCache);\n    memoed.save();\n  };\n\n  memoed.cacheOnly = function() {\n    cacheOnly = true;\n    return memoed;\n  };\n\n  return memoed;\n};\n\nmodule.exports = localStorageMemoize;\n","// Based on\n// https://raw.github.com/bgrins/devtools-snippets/master/snippets/console-save/console-save.js\nvar saveToFile = function(data, filename) {\n  if (!data) {\n    console.error('Console.save: No data');\n    return;\n  }\n\n  if (!filename) {\n    filename = 'console.json';\n  }\n\n  if (typeof data === \"object\") {\n    data = JSON.stringify(data, undefined, 4);\n  }\n\n  var blob = new Blob([data], {type: 'text/json'}),\n      e    = document.createEvent('MouseEvents'),\n      a    = document.createElement('a');\n\n  a.download = filename;\n  a.href = window.URL.createObjectURL(blob);\n  a.dataset.downloadurl =  ['text/json', a.download, a.href].join(':');\n  e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  a.dispatchEvent(e);\n};\n\nmodule.exports = saveToFile;\n","module.exports = function() {\n  var cache = {};\n  var counter = 0;\n  return function(val) {\n    if (!cache.hasOwnProperty(val)) {\n      cache[val] = counter++;\n    }\n    return cache[val];\n  };\n};\n","var data = require(\"data\");\nvar aggregate = require(\"aggregate\");\nvar render = require(\"render\");\nvar projections = require(\"projections\");\n\nvar makeMap = function(container, projection, processed, world) {\n  var svg = d3.select(container)\n    .append(\"svg\")\n    .attr(\"width\", projection.width)\n    .attr(\"height\", projection.height);\n\n  render({\n    svg: svg,\n    projection: projection,\n    world: world,\n    processed: processed,\n    width: projection.width,\n    height: projection.height\n  });\n\n  return svg;\n};\n\nmodule.exports = function() {\n  $(function() {\n    var width = $(window).width() * 0.9;\n\n    var world50mPromise = $.getJSON(\"world-50m.json\").then(_.identity);\n\n    $.when(aggregate(data), world50mPromise).then(function(processed, world) {\n      render.makeToggles(_.keys(data));\n      render.makeBars(processed.visitedByAtLeastN);\n\n      d3.select(\".outer-container\")\n        .append(\"div\")\n        .attr(\"class\", \"container\")\n        .style(\"width\", width + \"px\");\n\n      d3.select(\".container\").append(\"h2\").text(\"North America\");\n      makeMap(\".container\", projections.northAmerica(width), processed, world);\n      d3.select(\".container\").append(\"h2\").text(\"East Coast\");\n      makeMap(\".container\", projections.eastCoast(width), processed, world);\n      d3.select(\".container\").append(\"h2\").text(\"India\");\n      makeMap(\".container\", projections.india(width), processed, world);\n      d3.select(\".container\").append(\"h2\").text(\"Europe\");\n      makeMap(\".container\", projections.europe(width), processed, world);\n      d3.select(\".container\").append(\"h2\").text(\"World\");\n      makeMap(\".container\", projections.world(width), processed, world);\n    });\n  });\n};\n","var getBounds = function(projection, lonLatBounds) {\n  var box = [\n    projection(lonLatBounds[0]),\n    projection(lonLatBounds[1])\n  ];\n\n  return {\n    box: box,\n    width: box[1][0] - box[0][0],\n    height: box[1][1] - box[0][1]\n  };\n};\n\nvar mercatorProj = function(width, lonLatBounds) {\n  var projection = d3.geo.mercator()\n      .translate([0, 0])\n      .precision(0.1);\n\n  var bounds;\n  bounds = getBounds(projection, lonLatBounds);\n\n  var height = width * (bounds.height / bounds.width);\n  projection.scale(projection.scale() * (height / bounds.height));\n\n  bounds = getBounds(projection, lonLatBounds);\n\n  projection\n    .translate([-bounds.box[0][0], -bounds.box[0][1]])\n    .clipExtent([[0, 0], [width, height]]);\n\n  projection.width = width;\n  projection.height = height;\n\n  return projection;\n};\n\nexports.world = function(width) {\n  return mercatorProj(width, [\n    [-180, 83],\n    [180, -65]\n  ]).rotate([-10, 0, 0]);\n};\n\nexports.northAmerica = function(width) {\n  return mercatorProj(width, [\n    [-130, 55],\n    [-50, 20]\n  ]);\n};\n\nexports.eastCoast = function(width) {\n  return mercatorProj(width, [\n    [-100, 45],\n    [-70, 23]\n  ]);\n}\n\nexports.europe = function(width) {\n  return mercatorProj(width, [\n    [-30, 61],\n    [35, 34]\n  ]);\n};\n\nexports.india = function(width) {\n  return mercatorProj(width, [\n    [65, 40],\n    [100, 5]\n  ]);\n};\n","var uniqueCounter = require(\"lib/unique_counter\");\n\nvar colors = d3.scale.category10();\nvar nameCounter = uniqueCounter();\n\nvar nameColor = function(name) {\n  return colors(nameCounter(name));\n};\n\nmodule.exports = function(opts) {\n  var svg = opts.svg;\n  var projection = opts.projection;\n  var world = opts.world;\n  var processed = opts.processed;\n  var width = opts.width;\n  var height = opts.height;\n\n  var path = d3.geo.path()\n      .projection(projection);\n\n  var arc = d3.svg.arc().innerRadius(0);\n\n  var tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr('class', 'tooltip')\n    .style({\n      \"position\": \"absolute\",\n      \"z-index\": \"10\",\n      \"background\": \"rgba(20, 20, 20, 0.5)\",\n      \"color\": \"rgba(150, 150, 150, 0.5)\",\n      \"border-radius\": \"5px\",\n      \"padding\": \"2px\",\n      \"display\": \"none\"\n    });\n\n  svg.selectAll(\".country\")\n    .data(topojson.feature(world, world.objects.countries).features)\n    .enter()\n    .insert(\"path\")\n    .attr({\n      \"class\": \"country\",\n      \"fill\": function(d) {\n        var country = processed.countriesById[d.id];\n        var count = 0;\n        var visited = false;\n        if (country) {\n          visited = true;\n          count = country.count;\n        }\n        var grey = 10 + 5 * visited + 2 * Math.pow(count, 1.0/2.5);\n        return d3.rgb(grey, grey, grey);\n      },\n      \"d\": path\n    });\n\n  svg.insert(\"path\")\n    .datum(topojson.mesh(world, world.objects.countries, function(a, b) {\n      return a !== b;\n    }))\n    .attr(\"class\", \"boundary\")\n    .attr(\"d\", path);\n\n  var placesPerPerson = _(processed.placesPerPerson)\n    .sortBy(\"lon\")\n    .sortBy(\"totalCount\")\n    .filter(function(d) {\n      var proj = projection([d.lon, d.lat]);\n      return (proj && !(\n        proj[0] < 0 || proj[0] >= width ||\n        proj[1] < 0 || proj[1] >= height));\n    })\n    .value();\n\n  // scale factor\n  var sf = Math.pow((projection.scale() / 205) * (projection.width / 1400), 1/3);\n\n  var totalAnimTime = 5000;\n\n  var filteredPairsByPerson = {};\n  _.forOwn(processed.pairsByPerson, function(pairs, name) {\n    filteredPairsByPerson[name] = _.filter(pairs, function(pair) {\n      var c1 = projection([pair[0].lon, pair[0].lat]);\n      var c2 = projection([pair[1].lon, pair[1].lat]);\n\n      if (!c1 || !c2) return false;\n\n      return !((c1[0] < 0 || c1[0] > projection.width ||\n                c1[1] < 0 || c1[1] > projection.height) ||\n                (c2[0] < 0 || c2[0] > projection.width ||\n                c2[1] < 0 || c2[1] > projection.height));\n      });\n  });\n\n  var nDots = placesPerPerson.length;\n  var nPaths = _.flatten(_.values(filteredPairsByPerson)).length;\n\n  var totalAnimLength = 10000;\n  var dotDuration = 500;\n  var dotDelay = (totalAnimLength / 2 - dotDuration) / nDots;\n  var pathStart = totalAnimLength / 2;\n  var pathDelay = (totalAnimLength / 2) / (nPaths + 1);\n\n  var pairsBefore = 0;\n  _.forOwn(filteredPairsByPerson, function(filteredPairs, name) {\n    svg.selectAll(\".travelpath.\" + name)\n      .data(filteredPairs)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"travelpath \" + name)\n      .attr(\"stroke-width\", (1 * sf) + 'px')\n      .attr(\"stroke-opacity\", 0)\n      .attr(\"stroke\", nameColor(name))\n      .attr(\"fill-opacity\", 0)\n      .attr(\"d\", \"M0,0\");\n\n    $(svg.node()).waypoint(_.once(function() {\n      svg.selectAll(\".travelpath.\" + name)\n        .data(filteredPairs)\n        .transition()\n        .duration(pathDelay)\n        .delay(function(d, i) { return pathStart + (pairsBefore + i) * pathDelay; })\n        .attr(\"stroke-opacity\", 0.25)\n        .attrTween(\"d\", function(pair) {\n          var c1 = projection([pair[0].lon, pair[0].lat]);\n          var c2 = projection([pair[1].lon, pair[1].lat]);\n\n          // TODO(jlfwong): Increase jitter for shorter distances\n          var radius = (width / 2) * (1 + 0.2 * Math.random());\n\n          var dst = d3.interpolate(c1, c2);\n          var rad = d3.interpolate(radius * radius, radius);\n\n          return function(t) {\n            var c2 = dst(t);\n            var r = rad(t);\n            return (\n              \"M\" + c1[0] + \",\" + c1[1] +\n              \" A\" + r + \",\" + r +\n              \" 0 0,0 \" + c2[0] + \",\" + c2[1]\n            );\n          };\n        });\n\n      pairsBefore += filteredPairs.length;\n    }), {offset: '50%'});\n  });\n\n  svg.selectAll(\".place\")\n    .data(placesPerPerson)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", function(d) {\n      return \"place \" + d.name;\n    })\n    .attr({\n      \"fill\": function(d) {\n        return nameColor(d.name);\n      },\n      \"fill-opacity\": 0,\n      \"transform\": function(d) {\n        var proj = projection([d.lon, d.lat]);\n        return \"translate(\" + proj[0] + \",\" + proj[1] + \")\";\n      },\n      \"d\": function(d) {\n        var sliceAngle = 2 * Math.PI / d.names.length;\n        return arc({\n          outerRadius: sf * (1 + 2 * Math.log(1 + d.totalCount)),\n          startAngle: d.nameIndex * sliceAngle,\n          endAngle: (d.nameIndex + 1) * sliceAngle\n        });\n      }\n    })\n    .on(\"mouseover\", function(d) {\n      tooltip.text(d.placeRaw + \" (\" + d.names.join(\", \") + \")\");\n      tooltip.style(\"display\", \"block\");\n    })\n    .on(\"mousemove\", function() {\n      tooltip.style({\n        \"top\":  (event.pageY - 10) + \"px\",\n        \"left\": (event.pageX + 10) + \"px\"\n      });\n    })\n    .on(\"mouseout\", function() {\n      tooltip.style(\"display\", \"none\");\n    });\n\n  $(svg.node()).waypoint(_.once(function() {\n    svg.selectAll(\".place\")\n      .data(placesPerPerson)\n      .transition()\n      .ease(\"bounce\")\n      .duration(dotDuration)\n      .delay(function(d, i) { return i * dotDelay; })\n      .attr(\"fill-opacity\", 0.75);\n  }), {offset: '50%'});\n};\n\nmodule.exports.makeBars = function(visitedByAtLeastN) {\n  var table = d3.select(\".stats\")\n    .append(\"table\")\n    .attr(\"class\", \"bars\");\n\n  var headerTr = table.append(\"thead\").append(\"tr\");\n\n  headerTr.append(\"th\").text(\"# places\").attr(\"class\", \"places\");\n  headerTr.append(\"th\").text(\"visited by...\").attr(\"class\", \"visited-by\");\n  headerTr.append(\"th\").text(\"# countries\").attr(\"class\", \"countries\");\n\n  var placeCountScale = d3.scale.linear()\n    .domain([0, _.max(_.pluck(visitedByAtLeastN, 'placeCount'))])\n    .range([0, 100]);\n\n  var countryCountScale = d3.scale.linear()\n    .domain([0, _.max(_.pluck(visitedByAtLeastN, 'countryCount'))])\n    .range([0, 100]);\n\n  var trs = table.selectAll(\".bars tr.data-row\")\n    .data(visitedByAtLeastN)\n    .enter()\n    .append(\"tr\")\n    .attr(\"class\", \"data-row\");\n\n  trs\n    .append(\"td\")\n    .attr(\"class\", \"places\")\n    .append(\"div\")\n    .style(\"width\", \"10%\")\n    .append(\"span\")\n    .text(function(d) { return d.placeCount; });\n\n  trs\n    .append(\"td\")\n    .attr(\"class\", \"visited-by\")\n    .html(function(d) {\n      return (\n        ((d.n == visitedByAtLeastN.length) ? \"\" : \"&ge; \") +\n        d.n +\n        \" Arora\" +\n        ((d.n == 1) ? \"\" : \"s\")\n      );\n    });\n\n  trs\n    .append(\"td\")\n    .attr(\"class\", \"countries\")\n    .append(\"span\")\n    .append(\"div\")\n    .style(\"width\", \"10%\")\n    .append(\"span\")\n    .text(function(d) { return d.countryCount; });\n\n  // TODO(jlfwong): Figure out why the bars start at 50% width instead of 0...\n\n  _.defer(function() { _.delay(function() {\n    table.selectAll(\".data-row .places div\")\n      .data(visitedByAtLeastN)\n      .transition()\n      .duration(1000)\n      .ease(\"bounce\")\n      .delay(function(d, i) { return i * 100; })\n      .style(\"width\", function(d) { return placeCountScale(d.placeCount) + '%'; });\n\n    table.selectAll(\".data-row .countries div\")\n      .data(visitedByAtLeastN)\n      .transition()\n      .duration(1000)\n      .ease(\"bounce\")\n      .delay(function(d, i) { return i * 100; })\n      .style(\"width\", function(d) { return countryCountScale(d.countryCount) + '%'; });\n  }, 100); });\n};\n\nmodule.exports.makeToggles = function(names) {\n  var enabled = _.reduce(names, function(result, val) {\n    result[val] = true;\n    return result;\n  }, {});\n\n  var update = function() {\n    _.each(names, function(name) {\n      var show = enabled[name];\n      d3.selectAll('.' + name).style('display', show ? 'inline' : 'none');\n      d3.select('.label-' + name).style('color', show ? nameColor(name) : '#444');\n    });\n  };\n\n  var toggles = d3.select(\".outer-container\")\n    .append(\"div\")\n    .attr(\"class\", \"toggles\");\n\n  var lis = toggles\n    .append(\"ul\")\n    .selectAll(\"li\")\n    .data(names)\n    .enter()\n    .append(\"li\");\n\n  lis\n    .append(\"a\")\n    .attr(\"href\", \"#\")\n    .text('toggle')\n    .on('click', function(name) {\n      enabled[name] = !enabled[name];\n      update();\n      event.preventDefault();\n    });\n\n  lis\n    .append(\"a\")\n    .attr(\"href\", \"#\")\n    .text('only')\n    .on('click', function(name) {\n      _.each(names, function(name) { enabled[name] = false; });\n      enabled[name] = true;\n      update();\n      event.preventDefault();\n    });\n\n  lis\n    .append(\"span\")\n    .attr(\"href\", \"#\")\n    .attr(\"class\", function(name) {\n      return \"label-\" + name;\n    })\n    .style({\n      \"color\": nameColor,\n      \"text-decoration\": \"none\"\n    })\n    .text(_.identity);\n\n  toggles.append(\"a\")\n    .attr(\"href\", \"#\")\n    .text(\"show all\")\n    .on('click', function() {\n      _.each(names, function(name) { enabled[name] = true; });\n      update();\n      event.preventDefault();\n    });\n\n  $(toggles.node()).waypoint(\"sticky\");\n};\n"]}